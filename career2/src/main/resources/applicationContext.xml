<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.2.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
	http://www.springframework.org/schema/data/jpa 
	http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
	<aop:aspectj-autoproxy/>
	<aop:config proxy-target-class="true"></aop:config>
	<context:component-scan base-package="com.eq.service"/>
	<context:component-scan base-package="com.eq.dao"/>
	<context:component-scan base-package="com.eq.util"/>
	<context:property-placeholder location="classpath:system.properties" />

	<!--创建jdbc数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="com.eq.dao" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>  
                <prop key="hibernate.show_sql">true</prop>  
                <prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
		<property name="database" value="MYSQL" />
	</bean>

	<!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口 -->
	<jpa:repositories base-package="com.eq.dao"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />
	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!-- 使用annotation定义事务 -->  
   <tx:annotation-driven transaction-manager="transactionManager"/> 
	<!-- shiro配置开始 -->
	<!-- 凭证匹配器-->
	<!-- <bean id="credentialsMatcher" class="
	com.eq.service.shiro.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager"/>
		<property name="hashAlgorithmName" value="md5"/>
		<property name="hashIterations" value="2"/>
		<property name="storedCredentialsHexEncoded" value="true"/>
	</bean>
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="rememberMe"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="2592000"/>30天  
	</bean> -->
	<!-- rememberMe管理器 -->  
	<!-- <bean id="rememberMeManager"   
	class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
	    <property name="cipherKey" value="  
	#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>  
	     <property name="cookie" ref="rememberMeCookie"/>  
	</bean>  -->
	<!-- Realm实现-->
	<!-- <bean id="userRealm" class="com.eq.service.shiro.MyRealm">
		<property name="userService" ref="userService"/>
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
		<property name="cachingEnabled" value="true"/>
		<property name="authenticationCachingEnabled" value="true"/>
		<property name="authenticationCacheName" value="authenticationCache"/>
		<property name="authorizationCachingEnabled" value="true"/>
		<property name="authorizationCacheName" value="authorizationCache"/>
	</bean> -->
	<!-- 缓存管理器 使用Ehcache实现 -->  
	<!-- <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
	    <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>  
	</bean>  -->
	<!-- 会话Cookie模板 -->  
	<!-- <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="sid"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="-1"/>  
	</bean>   -->
	<!-- 会话ID生成器 -->  
	<!-- <bean id="sessionIdGenerator"   
	class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>   -->
	<!-- 会话DAO -->  
	<!-- <bean id="sessionDAO"   
	class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">  
	    <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>  
	    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>  
	</bean> --> 
	<!-- 会话验证调度器 -->  
	<!-- <bean id="sessionValidationScheduler"   
	class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">  
	    <property name="sessionValidationInterval" value="1800000"/>  
	    <property name="sessionManager" ref="sessionManager"/>   
	</bean> -->
	<!-- 会话管理器 -->  
	<!-- <bean id="sessionManager"   
	class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
	    <property name="globalSessionTimeout" value="1800000"/>  
	    <property name="deleteInvalidSessions" value="true"/>  
	    <property name="sessionValidationSchedulerEnabled" value="true"/>  
	    <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>  
	    <property name="sessionDAO" ref="sessionDAO"/>  
	    <property name="sessionIdCookieEnabled" value="true"/>  
	    <property name="sessionIdCookie" ref="sessionIdCookie"/>  
	</bean>  -->
	<!-- 安全管理器 -->  
	<!-- <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
	<property name="realm" ref="userRealm"/>  
	    <property name="sessionManager" ref="sessionManager"/>  
	    <property name="cacheManager" ref="cacheManager"/>  
	    <property name="rememberMeManager" ref="rememberMeManager"/>  
	</bean>    -->
	<!-- 基于Form表单的身份验证过滤器 -->  
	<!-- <bean id="formAuthenticationFilter"   
	class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">  
	    <property name="usernameParam" value="username"/>  
	    <property name="passwordParam" value="password"/> 
	    <property name="rememberMeParam" value="rememberMe"/> 
	    <property name="loginUrl" value="/login.jsp"/>   
	</bean>  -->
	<!-- Shiro的Web过滤器 -->  
	<!-- <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <property name="securityManager" ref="securityManager"/>  
	    <property name="loginUrl" value="/login.jsp"/>  
	    <property name="unauthorizedUrl" value="/unauthorized.jsp"/>  
	    <property name="filters">  
	        <util:map>  
	            <entry key="authc" value-ref="formAuthenticationFilter"/>  
	        </util:map>  
	    </property>  
	    <property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource">  
	        
	    </property>  
	</bean>   
	
	<bean id="chainDefinitionSectionMetaSource" class="com.eq.service.shiro.ChainDefinitionSectionMetaSource">  
	    <property name="filterChainDefinitions">  
	        <value> 
	            /index.jsp = anon
	            /career.jsp = anon  
	            /user/add = anon
	            /loginManage/** = anon
	            /unauthorized.jsp = anon  
	            /login.jsp = authc  
	            /register.jsp=anon
	            /logout = logout  
	            /js/** = anon
	            /css/** = anon
	            /image/** = anon
	            /** = user  
	        </value>   
	    </property>  
	</bean>   -->
	
	<!-- shiro配置结束 -->

</beans>